.plan-outer-wrap(
  ng-class="{'col-md-12 active' : edit.isActive(plan.maintenance_id), 'col-md-6': !edit.isActive(plan.maintenance_id)}",
  id="maintenance-plan-{{plan.maintenance_id}}")
  .plan-wrap(
    ng-class="{'active' : edit.isActive(plan.maintenance_id), pointer: !edit.isActive(plan.maintenance_id)}")
    .content-block.maintenance-plan.updatable(
      ng-class="{'overdue': plan.overdue && !plan.silenced, updating: loader.loading}")
      .spinner.spinner-lg(ng-if='loader.loading')
      .header.plan-header
        .actions-panel(
          ng-class="{'active': edit.isActive(plan.maintenance_id), 'inactive' : !edit.isActive(plan.maintenance_id)}")
          i.fa.fa-trash-o.action(
            ng-if='edit.isActive(plan.maintenance_id) && !isReadOnly()',
            ng-click='delete()',
            tooltip="{{'Delete this plan' | translate}}")
          i.fa.fa-compress.action(ng-click='minimize()', ng-show='edit.isActive(plan.maintenance_id)')
          i.fa.fa-moon-o.action(
            ng-click='silence()',
            ng-if='plan.overdue && !plan.silenced',
            tooltip="{{'Snooze this plan' | translate}}")
        .details(ng-if="!editBasic.active && (!plan.suggestion || plan.suggestion === 'accepted')")
          .header-title.editable
            span(ng-if="plan.overdue")
              i.fa.fa-calendar-times-o.red
              i.fa.fa-eye-slash(ng-if='!editBasic.active && plan.hidden && isInternal')
            h2.title(ng-class="{'red': plan.overdue}", ng-dblclick='editBasic.toggle()')
              span(ng-if="plan.name.length", ng-dblclick='editBasic.toggle()') {{plan.name}} ({{plan.maintenance_id}})
              span(ng-if='!plan.name || !plan.name.length', translate) Unnamed plan ({{plan.maintenance_id}})
              i.fa.fa-pencil-square-o.edit-toggle(
                ng-click='editBasic.toggle()',
                ng-if='!isReadOnly()',
                tooltip="{{'Click to edit this plan' | translate}}")
            p.red(ng-if="error") {{error}}
          .date-time.editable(ng-if='plan.start')
            .start(ng-if='plan.start')
              b {{plan.start | moment:'dddd, LL'}}
            .group
              i.fa.fa-clock-o
              time-range.time-local(
                start='plan.start',
                end='plan.end',
                ng-dblclick='editBasic.toggle()')
              i.fa.fa-pencil-square-o.edit-toggle(
                ng-click='editBasic.toggle()',
                ng-if='!isReadOnly()',
                tooltip="{{'Click to edit this plan' | translate}}")
            .group
              i.fa.fa-clock-o
              span(translate) UTC&nbsp;
              time-range.time-utc(
                start='plan.start',
                end='plan.end',
                timezone="'UTC'"
                ng-dblclick='editBasic.toggle()')
        .details-edit.pull-left(ng-if='editBasic.active')
          form.editable-form(novalidate, name="editBasicForm", ng-submit="editBasic.save()")
            .form-group(ng-if="plan.suggestion === 'proposed' && isInternal")
              label.full-width.red Suggested plan
              textarea.form-control(
                placeholder='Describe why Red Hat is suggesting this plan',
                ng-model='editBasic.description')
              hr
            .form-group.nick(ng-class="{'has-error': editBasicForm.name.$invalid}")
              label(translate) Plan Name:&nbsp;
              input.form-control(
                type='text',
                name='name',
                placeholder="{{'Unnamed plan' | translate}}",
                maxlength='255',
                ng-model='editBasic.name')
            .form-group.title(ng-class="{'has-error': editBasicForm.date.$invalid}")
              label(translate) Date:&nbsp;
                i.fa.fa-question-circle(tooltip='{{editDateTooltip}}')
              input.form-control(
                type='text',
                name='date',
                id="planEditDate-{{plan.maintenance_id}}",
                date-time,
                ng-model='editBasic.start',
                view="date",
                min-view="date",
                max-view="date",
                format="LL",
                auto-close='true',
                highlights="calendarDates",
                date-change='dateChanged')
            .date-time
              .form-group.form-group-inline(ng-class="{'has-error': editBasicForm.time.$invalid}")
                label.full-width Start time:&nbsp;
                input.time(
                  type='time',
                  name='time',
                  ng-model='editBasic.time',
                  ng-change='editBasic.sync()',
                  step='900',
                  ng-required='editBasic.start')
              .form-group.form-group-inline(ng-class="{'has-error': editBasicForm.number.$invalid}")
                label.full-width Duration:&nbsp;
                input.duration(
                  type='number',
                  name='duration',
                  min='0',
                  step='15',
                  ng-model='editBasic.duration',
                  ng-required='editBasic.start')
            .form-group.form-group-inline(ng-if='editBasic.start')
              label.full-width UTC time:&nbsp;
              | {{editBasic.start | moment:'LLL':'UTC'}}
            .form-group
              .pull-right.btn-group(role='group')
                button.btn.btn-sm.btn-blank.action(
                  type='button',
                  ng-click="editBasic.toggle()",
                  translate) Cancel
                button.btn.btn-sm.btn-accent.action(
                  type='submit',
                  ng-disabled="editBasicForm.$invalid",
                  translate) Save
        .details-suggested.editable(ng-if="!editBasic.active && (plan.suggestion === 'proposed' || plan.suggestion === 'rejected')")
          p.description
            span(ng-if='plan.hidden && isInternal')
              i.fa.fa-eye-slash
              i.fa.fa-meh-o.red(ng-if="plan.suggestion === 'rejected'", tooltip = 'This suggestion was rejected by the customer')
            strong(
              ng-show='plan.description',
              ng-dblclick='editBasic.toggle()') {{plan.description}}
            strong(
              ng-hide='plan.description',
              ng-dblclick='editBasic.toggle()',
              translate) &nbsp; This is a plan suggested by Red Hat
            i.fa.fa-pencil-square-o.edit-toggle(
              ng-click='editBasic.toggle()',
              ng-if='!isReadOnly()',
              tooltip="{{'Click to edit this plan' | translate}}")
      .plan-summary(ng-class="{'hidden' : edit.isActive(plan.maintenance_id)}")
        .metrics
          strong {{plan.actionsDone}}/{{plan.actions.length}}&nbsp;
          span(translate) Actions resolved
        .progress-bar
          .progress(ng-style="plan.actionsDone / plan.actions.length | toWidth")
          .bar

      // Edit mode
      .content.content-tabs.nobordertop.active(ng-if='edit.isActive(plan.maintenance_id)')
        tabset.nav.nav-justified(
          type="noformat",
          vertical="false",
          justified="true",
          role="tablist")

          // Actions Tab
          tab(role="tabpanel", heading="{{'Actions' | translate}}", deselect='addRule.reset()', select='tabSelected()')
            .content-block.rule(ng-repeat="rule in (plan.rules | orderBy:['-severityNum', 'rule_id', '-actions.length'] | offset:pager.offset | limitTo:pager.perPage) track by rule.id")
              .header.bordered(ng-init='tableEdit = false')
                .title
                  ansible-icon.inline-right(value='rule.ansible', show-planner-line='false')
                  strong {{rule.description}}
                  span.pull-right(ng-hide='isReadOnly()')
                    a(ng-hide='tableEdit', ng-click='tableEdit = true')
                      strong(
                        translate,
                        tooltip="{{'Click to add/remove affected systems' | translate}}") Edit
                    i.fa.fa-trash-o(
                      ng-if='tableEdit',
                      ng-click='removeActions(rule.actions)',
                      tooltip="{{'Remove this action' | translate}}")
                .row.row-short
                  .col-sm-12
                    all-severity-icons(rule='rule', ng-if='!loading')
              .content.nopad.table-responsive
                maintenance-table-systems(
                  params='tableParams(rule, true, false)',
                  edit='tableEdit',
                  item='rule')
            div(translate, ng-if='!plan.rules.length') This plan is empty
            pagination.pull-right.pagination-blue(
              ng-if="plan.rules.length > pager.perPage",
              total-items="plan.rules.length",
              ng-model="pager.currentPage",
              items-per-page="pager.perPage",
              ng-change="pager.update()")

          // Systems Tab
          tab(role="tabpanel", heading="{{'Systems' | translate}}", deselect='addSystem.reset()', select='tabSelected("systems")')
            .content-block.system(
              ng-repeat="system in (plan.systems | orderBy:['_name', 'system_id'] | offset:pager.offset | limitTo:pager.perPage) track by system.system_id")
              .header.bordered
                type-icon(
                type-id='system.system_type_id',
                include-text='false')
                a(ng-click='showSystemModal(system)')
                  strong &nbsp; {{system._name}} &nbsp;&nbsp;
                span.item
                  strong(translate) Last check in:
                  span(ng-class='system | checkInStyle') &nbsp;&nbsp;{{system.last_check_in | timeAgo}}
                span.pull-right(ng-hide='isReadOnly()')
                  a(ng-hide='tableEdit', ng-click='tableEdit = true')
                    strong(
                      translate,
                      tooltip="{{'Click to add/remove actions for this system' | translate}}") Edit
                  i.fa.fa-trash-o(
                    ng-if='tableEdit',
                    ng-click='removeActions(system.actions)',
                    tooltip="{{'Remove this system' | translate}}")
                .text-center.red.hidden
                  strong System restart required&nbsp;&nbsp;
                  i.fa.fa-refresh
              .content.nopad.table-responsive
                maintenance-table-actions(
                  params='tableParams(system, false, false)',
                  edit='tableEdit',
                  item='system')
            div(translate, ng-if='!plan.systems.length') This plan is empty
            pagination.pull-right.pagination-blue(
              ng-if="plan.systems.length > pager.perPage",
              total-items="plan.systems.length",
              ng-model="pager.currentPage",
              items-per-page="pager.perPage",
              ng-change="pager.update()")

          tab.tab-blue(
            role="tabpanel",
            disable='!ansibleSupport',
            ng-init='setupTabActivator($parent)',
            select='tabSelected("playbook"); prepareAnsibleTab()')
            tab-heading
              ansible-icon.inline-right(value='ansibleSupport', show-tooltip='false', white='true')
              strong(translate) Playbook
            .spinner(ng-show='playbookTabLoader.loading')
            .playbooks(ng-hide='playbookTabLoader.loading')
              card.playbook(ng-repeat='play in plays')
                card-header.gray
                  a(ui-sref='app.actions-rule({category: play.rule.category.toLowerCase(), rule: play.rule.rule_id})')
                    b {{ play.rule.description }}
                card-content.flex
                  .systems
                    h4.section-title(translate) Systems:
                    expandable-system-list(systems='play.systems')

                  .resolution
                    h4.section-title(translate) Resolution:
                    p {{ play.ansible_resolutions[0].description }} &nbsp;
                      a(ng-if='play.ansible_resolutions.length > 1', ng-click='resolutionModal(play)', tooltip='{{"Multiple resolutions available. Click here to select a different one." | translate}}')
                        span(translate) - edit ({{play.ansible_resolutions.length}} options)
                    ul.list-plain
                      li(ng-if='play.ansible_resolutions[0].needs_reboot')
                        .icon-inline.red
                          i.fa.fa-repeat
                          strong(translate, tooltip = "{{'System reboot is required to resolve this issue' | translate}}") Reboot Required
                      li(ng-if='play.ansible_resolutions[0].resolution_risk')
                        risk-of-change(change-risk='play.ansible_resolutions[0].resolution_risk')                      

              card.playbook.playbook-summary
                card-header.gray
                  strong.red(translate) System reboot summary

                card-content.gray(ng-if='!systemsToReboot.length')
                  .cell
                    p(translate) This playbook&nbsp;
                      b.text-success(translate) does not require a system reboot.

                card-content.gray.flex(ng-if='systemsToReboot.length')
                  .systems
                    h4.section-title(translate) Systems:
                    expandable-system-list(systems='systemsToReboot')

                  .resolution
                    .toggle.push-bottom-narrow(ng-click="plan.allow_reboot = !plan.allow_reboot; allowRebootChanged()")
                      input(type="checkbox", ng-checked='plan.allow_reboot')
                      b(translate) Reboot systems automatically
                      .toggle-slider(ng-class="{active: plan.allow_reboot}")

                    p(translate) Some of the resolutions above require system reboot in order for the changes to take effect. This playbook&nbsp;
                      b.red(ng-if='plan.allow_reboot') will reboot the systems automatically.
                      span(ng-if='!plan.allow_reboot')
                        b will not reboot the systems.&nbsp;
                        | The systems will need to be rebooted manually.

      footer.footer(ng-show='edit.isActive(plan.maintenance_id)')
        a.btn.btn-sm.btn-default(ng-if='isInternal && !plan.hidden', ng-click='hidden(true)')
          i.fa.fa-eye-slash.inline-right
          span(translate) Hide
        a.btn.btn-sm.btn-default(ng-if='isInternal && plan.hidden', ng-click='hidden(false)')
          i.fa.fa-eye.inline-right
          span(translate) Publish
        a.btn.btn-sm.btn-accent(ng-if="plan.suggestion === 'proposed' && !plan.hidden", ng-click='accept()')
          i.fa.fa-check.inline-right
          span(translate) Accept
        a.btn.btn-sm.btn-default(ng-if="plan.suggestion === 'proposed' && !plan.hidden", ng-click='reject()')
          i.fa.fa-close.inline-right
          span(translate) Ignore
        a.btn.btn-sm.btn-accent.pull-right(
          ng-click='addActions()',
          ng-if='!isReadOnly()')
          span(translate) Add actions
        a.btn.btn-sm.btn-open-blue.action.pull-right(translate, ng-click='exportPlan(plan.maintenance_id)')
          i.fa.fa-download.inline-right
          span(translate) Export CSV
        a.btn.btn-sm.btn-open-blue.action.pull-right(
            translate,
            ng-click='downloadPlaybook()',
            ng-disabled='!ansibleSupport')
          i.svg.ansible-icon.inline-right
            img(src='static/images/l_ansible-blue.svg')
          span(translate) Download Playbook
